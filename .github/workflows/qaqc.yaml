name: QualityContol

on:
  pull_request:
    branches:
      - main

jobs:
  quality-control:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v2

    - uses: ./.github/actions/setupconda

    - name: Install NB-Clean
      run: |
        pip install nb-clean==2.0.2

    - name: Ensure clean notebooks
      shell: python
      run: |
        import yaml
        import nb_clean as nbc
        from pathlib import Path
        import nbformat
        
        with open('./book/_config.yml') as f:
          data = yaml.safe_load(f)
          
        # Sometimes we use rendered notebooks instead of executing them
        exclude_paths = []
        for pattern in data['execute']['exclude_patterns']:
            exclude_paths += list(Path('book/tutorials').glob(pattern))
            exclude_notebooks = [path.as_posix() for path in exclude_paths]
        print('Excluded from execution:\n', '\n'.join(exclude_notebooks))
        
        # Scrub outputs for spellcheck and linkcheck
        for notebook in exclude_notebooks:
            print(f'Scrubbing outputs: {notebook}...')
            nb = nbformat.read(notebook, as_version=nbformat.NO_CONVERT)
            cleaned = nbc.clean_notebook(nb, 
                                         remove_empty_cells=True, 
                                         preserve_cell_metadata=True)
            nbformat.write(cleaned, notebook)
            
            
        all_ipynbs = [path.as_posix() for path in Path('book/tutorials').rglob('*.ipynb')]
        ipynbs = [p for p in all_ipynbs if not '.ipynb_checkpoints' in p]
          
        for notebook in ipynbs:
            #if not notebook in exclude_notebooks:
            print(f'Checking {notebook}...')
            nb = nbformat.read(notebook, as_version=nbformat.NO_CONVERT)
            result = nbc.check_notebook(nb, 
                                        remove_empty_cells=True, 
                                        preserve_cell_metadata=True)


    # NOTE: this isn't a comprehensive spellcheck, just common typos
    - name: Spellcheck
      if: always()
      uses: codespell-project/actions-codespell@master
      with:
        check_filenames: true
        check_hidden: true
        only_warn: false
        skip: '*.js,qaqc.yml'
        ignore_words_list: slippy,trough,thw

    # borrowed from https://github.com/ProjectPythia/pythia-foundations/blob/main/.github/workflows/link-checker.yaml
    - name: Disable Notebook Execution Before Linkcheck
      if: always()
      shell: python
      run: |
        import yaml
        
        with open('./book/_config.yml') as f:
          data = yaml.safe_load(f)
          data['execute']['execute_notebooks'] = 'off'
        
        with open('./book/_config.yml', 'w') as f:
          yaml.dump(data, f)

    - name: Check External Links
      if: always()
      run: |
        jb build book --builder linkcheck
